name: Docs

on:
  push:
    branches:
      - main
    paths:
      - "docs/**"
      - "learn/**"
      - ".github/workflows/docs.yaml"

env:
  # Repository specific variables
  REPO_NAME: starship
  DOCS_DEST_PATH: pages/starship
  LEARN_DEST_PATH: src/data/learn/starship
  BRANCH_PREFIX: auto-docs

jobs:
  docs-deploy:
    runs-on: ubuntu-latest
    if: contains(github.event.head_commit.modified, 'docs/') || contains(github.event.head_commit.added, 'docs/')

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Git
        run: |
          git config --global user.name 'GitHub Action'
          git config --global user.email 'action@github.com'

      - name: Set branch name
        run: |
          SHORT_SHA=$(echo ${{ github.sha }} | cut -c1-7)
          echo "BRANCH_NAME=${{ env.BRANCH_PREFIX }}/${{ env.REPO_NAME }}/docs/$SHORT_SHA" >> $GITHUB_ENV

      - name: Clone docs repository
        run: git clone https://x-access-token:${{ secrets.GH_HYPERWEB_PAT }}@github.com/hyperweb-io/docs.hyperweb.io.git external-docs

      - name: Create and push docs branch
        run: |
          cd external-docs
          git checkout -b ${{ env.BRANCH_NAME }}
          rsync -av --delete ../docs/ ./${{ env.DOCS_DEST_PATH }}/
          git add .
          git commit -m "Update ${{ env.REPO_NAME }} documentation"
          git push origin ${{ env.BRANCH_NAME }}

      - name: Create PR
        uses: peter-evans/create-pull-request@v5
        with:
          token: ${{ secrets.GH_HYPERWEB_PAT }}
          path: external-docs
          commit-message: "Update ${{ env.REPO_NAME }} documentation"
          title: "automated: Update ${{ env.REPO_NAME }} documentation"
          body: "Automated update of ${{ env.REPO_NAME }} documentation"
          branch: ${{ env.BRANCH_NAME }}
          base: main
          labels: automated-pr

      - name: Wait for PR checks
        uses: lewagon/wait-on-check-action@v1.3.1
        with:
          ref: ${{ env.BRANCH_NAME }}
          repo: hyperweb-io/docs.hyperweb.io
          token: ${{ secrets.GH_HYPERWEB_PAT }}
          check-interval: 10

      - name: Merge PR
        uses: peter-evans/merge-pull-request@v2
        with:
          token: ${{ secrets.GH_HYPERWEB_PAT }}
          repository: hyperweb-io/docs.hyperweb.io
          pull-request-number: ${{ steps.create-pr.outputs.pull-request-number }}
          merge-method: squash

  learn-deploy:
    runs-on: ubuntu-latest
    if: contains(github.event.head_commit.modified, 'learn/') || contains(github.event.head_commit.added, 'learn/')

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Git
        run: |
          git config --global user.name 'GitHub Action'
          git config --global user.email 'action@github.com'

      - name: Set branch name
        run: |
          SHORT_SHA=$(echo ${{ github.sha }} | cut -c1-7)
          echo "BRANCH_NAME=${{ env.BRANCH_PREFIX }}/${{ env.REPO_NAME }}/learn/$SHORT_SHA" >> $GITHUB_ENV

      - name: Clone learn repository
        run: git clone https://x-access-token:${{ secrets.GH_HYPERWEB_PAT }}@github.com/hyperweb-io/hyperweb.io.git learn-site

      - name: Create and push learn branch
        run: |
          cd learn-site
          git checkout -b ${{ env.BRANCH_NAME }}
          mkdir -p ./${{ env.LEARN_DEST_PATH }}
          rsync -av --delete ../learn/ ./${{ env.LEARN_DEST_PATH }}/
          git add .
          git commit -m "Update ${{ env.REPO_NAME }} learn content"
          git push origin ${{ env.BRANCH_NAME }}

      - name: Create PR
        uses: peter-evans/create-pull-request@v5
        with:
          token: ${{ secrets.GH_HYPERWEB_PAT }}
          path: learn-site
          commit-message: "Update ${{ env.REPO_NAME }} learn content"
          title: "automated: Update ${{ env.REPO_NAME }} learn content"
          body: "Automated update of ${{ env.REPO_NAME }} learn content"
          branch: ${{ env.BRANCH_NAME }}
          base: main
          labels: automated-pr

      - name: Wait for PR checks
        uses: lewagon/wait-on-check-action@v1.3.1
        with:
          ref: ${{ env.BRANCH_NAME }}
          repo: hyperweb-io/hyperweb.io
          token: ${{ secrets.GH_HYPERWEB_PAT }}
          check-interval: 10

      - name: Merge PR
        uses: peter-evans/merge-pull-request@v2
        with:
          token: ${{ secrets.GH_HYPERWEB_PAT }}
          repository: hyperweb-io/hyperweb.io
          pull-request-number: ${{ steps.create-pr.outputs.pull-request-number }}
          merge-method: squash
